{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "@odata.id": "ComponentIntegrity",
    "additionalProperties": false,
    "copyright": "Copyright 2014-2023 Hewlett Packard Enterprise Development, LP.  Portions Copyright 2014-2019 Distributed Management Task Force. All rights reserved.",
    "description": "The ComponentIntegrity resource provides critical and pertinent security information about a specific device, system, software element, or other managed entity.",
    "actions": {
        "actions": {
            "ComponentIntegrity.TPMGetSignedMeasurements": {
                "actionResponse": {
                    "additionalProperties": false,
                    "description": "The TPM signed measurement from a TPM.",
                    "longDescription": "This object shall contain the TPM signed PCR measurements from an TPM.",
                    "properties": {
                        "SignedMeasurements": {
                            "description": "The Base64-encoded cryptographic signed statement generated by the signer.",
                            "longDescription": "This property shall contain a Base64-encoded cryptographic signed statement generated by the signer.  This value shall be the concatenation of the 'quoted' and 'signature' response values of the 'TPM2_Quote' command defined in the Trusted Platform Module Library Specification.",
                            "readonly": true,
                            "type": "string",
                            "versionAdded": "v1_2_0"
                        }
                    },
                    "required": [
                        "SignedMeasurements"
                    ],
                    "type": "object"
                },
                "additionalProperties": false,
                "description": "This action gets the TPM Signed Measurements.",
                "longDescription": "This action shall reset the system represented by the resource.  For systems that implement ACPI Power Button functionality, the PushPowerButton value shall perform or emulate an ACPI Power Button Push.  The ForceOff value shall remove power from the system or perform an ACPI Power Button Override, commonly known as a four-second hold of the Power Button.  The ForceRestart value shall perform a ForceOff action, followed by an On action.",
                "properties": {
                    "Action": {
                        "enum": [
                            "ComponentIntegrity.TPMGetSignedMeasurements"
                        ],
                        "type": "string"
                    },
                    "target": {
                        "description": "Link to invoke action",
                        "format": "uri-reference",
                        "type": "string"
                    },
                    "title": {
                        "description": "Friendly action name",
                        "type": "string"
                    },
                    "Nonce": {
                        "description": "A set of bytes as a hex-encoded string that is signed with the measurements.  The value should be unique.",
                        "longDescription": "This parameter shall contain a set of bytes as a hex-encoded string that is signed with the measurements.  Services shall reject the action request if the number of bytes provided is larger than the value specified by the NonceSizeBytesMaximum property in the TPM property.  If not provided by the client, the service shall generate the nonce.  The value should be unique and generated using a random or a pseudo-random generator.  The service shall send this value to the TPM in the 'qualifyingData' parameter of the 'TPM2_Quote' command defined in the Trusted Platform Module Library Specification.",
                        "type": "string",
                        "pattern": "^[0-9a-fA-F]{64}$"
                    },
                    "PCRSelection": {
                        "description": "An object that identify the PCRs to sign.",
                        "longDescription": "This parameter shall contain the Base64-encoded representation of the 'TPML_PCR_SELECTION' object, as defined by the Trusted Platform Module Library Specification, that identifies the PCRs to sign.  The service shall send this value to the TPM in the 'PCRselect' parameter of the 'TPM2_Quote' command defined in the Trusted Platform Module Library Specification.",
                        "requiredParameter": true,
                        "type": "string"
                    }
                },
                "required": [
                    "Action",
                    "PCRSelection"
                ],
                "type": "object",
                "versionAdded": "v1_2_0"
            },
            "ComponentIntegrity.SPDMGetSignedMeasurements": {
                "actionResponse": {
                    "additionalProperties": false,
                    "description": "This action generates an SPDM cryptographic signed statement over the given nonce and measurements of the SPDM Responder.",
                    "longDescription": "This object shall contain the SPDM signed PCR measurements from an SPDM.",
                    "properties": {
                        "SignedMeasurements": {
                            "description": "The Base64-encoded cryptographic signed statement generated by the signer.",
                            "longDescription": "This property shall contain a Base64-encoded cryptographic signed statement generated by the signer.  This value shall be the concatenation of the 'quoted' and 'signature' response values of the 'TPM2_Quote' command defined in the Trusted Platform Module Library Specification.",
                            "readonly": true,
                            "type": "string",
                            "versionAdded": "v1_2_0"
                        },
                        "Version": {
                            "description": "The SPDM version used by the SPDM Responder to generate the cryptographic signed statement.",
                            "longDescription": "This property shall contain the SPDM version negotiated between the SPDM Requester and the SPDM Responder to generate the cryptographic signed statement.  For example, `1.0`, `1.1`, or `1.2`.",
                            "readonly": true,
                            "type": "string"
                        },
                        "HashingAlgorithm": {
                            "description": "The hashing algorithm used for generating the cryptographic signed statement.",
                            "longDescription": "This property shall contain the hashing algorithm negotiated between the SPDM Requester and the SPDM Responder.  The allowable values for this property shall be the hash algorithm names found in the 'BaseHashAlgo' field of the 'NEGOTIATE_ALGORITHMS' request message in DSP0274.  If the algorithm is an extended algorithm, this property shall contain the value `OEM`.",
                            "readonly": true,
                            "type": "string"
                        },
                        "SigningAlgorithm": {
                            "description": "The asymmetric signing algorithm used for generating the cryptographic signed statement.",
                            "longDescription": "This property shall contain the asymmetric signing algorithm negotiated between the SPDM Requester and the SPDM Responder.  The allowable values for this property shall be the asymmetric key signature algorithm names found in the 'BaseAsymAlgo' field of the 'NEGOTIATE_ALGORITHMS' request message in DSP0274.  If the algorithm is an extended algorithm, this property shall contain the value `OEM`.",
                            "readonly": true,
                            "type": "string"
                        }
                    },
                    "required": [
                        "SignedMeasurements",
                        "Version",
                        "HashingAlgorithm",
                        "SigningAlgorithm"
                    ],
                    "type": "object"
                },
                "additionalProperties": false,
                "description": "This action gets the SPDM Signed Measurements.",
                "longDescription": "This action shall reset the system represented by the resource.  For systems that implement ACPI Power Button functionality, the PushPowerButton value shall perform or emulate an ACPI Power Button Push.  The ForceOff value shall remove power from the system or perform an ACPI Power Button Override, commonly known as a four-second hold of the Power Button.  The ForceRestart value shall perform a ForceOff action, followed by an On action.",
                "properties": {
                    "Action": {
                        "enum": [
                            "ComponentIntegrity.SPDMGetSignedMeasurements"
                        ],
                        "type": "string"
                    },
                    "target": {
                        "description": "Link to invoke action",
                        "format": "uri-reference",
                        "type": "string"
                    },
                    "title": {
                        "description": "Friendly action name",
                        "type": "string"
                    },
                    "Nonce": {
                        "description": "A set of bytes as a hex-encoded string that is signed with the measurements.  The value should be unique.",
                        "longDescription": "This parameter shall contain a set of bytes as a hex-encoded string that is signed with the measurements.  Services shall reject the action request if the number of bytes provided is larger than the value specified by the NonceSizeBytesMaximum property in the TPM property.  If not provided by the client, the service shall generate the nonce.  The value should be unique and generated using a random or a pseudo-random generator.  The service shall send this value to the TPM in the 'qualifyingData' parameter of the 'TPM2_Quote' command defined in the Trusted Platform Module Library Specification.",
                        "type": "string",
                        "pattern": "^[0-9a-fA-F]{64}$"
                    },
                    "MeasurementIndices": {
                        "description": "An array of indices that identify the measurement blocks to sign.",
                        "items": {
                            "type": "integer"
                        },
                        "longDescription": "This parameter shall contain an array of indices that identify the measurement blocks to sign.  This array shall contain one or more unique values between `0` to `254`, inclusive, or contain a single value of `255`.  If not provided by the client, the value shall be assumed to be an array containing a single value of `255`.",
                        "type": "array"
                    },
                    "SlotId": {
                        "description": "The slot identifier for the certificate containing the private key to generate the signature over the measurements.",
                        "longDescription": "This parameter shall contain the SPDM slot identifier for the certificate containing the private key to generate the signature over the measurements.  If not provided by the client, the value shall be assumed to be `0`.  The SPDM Requester shall send this value to the SPDM Responder in the SPDM 'GET_MEASUREMENTS' request.",
                        "type": "integer"
                    }
                },
                "required": [
                    "Action"
                ],
                "type": "object",
                "versionAdded": "v1_2_0"
            }
        },
        "description": "The POST custom actions defined for this type (the implemented actions might be a subset of these)."
    },
    "properties": {
        "@odata.context": {
            "$ref": "Resource.json#/definitions/odatacontext"
        },
        "@odata.etag": {
            "$ref": "Resource.json#/definitions/odataetag"
        },
        "@odata.id": {
            "$ref": "Resource.json#/definitions/odataid"
        },
        "@odata.type": {
            "$ref": "Resource.json#/definitions/odatatype"
        },
        "Actions": {
            "description": "The available actions for this resource.",
            "longDescription": "This property shall contain the available actions for this resource.",
            "additionalProperties": false,
            "properties": {
                "#ComponentIntegrity.TPMGetSignedMeasurements": {
                    "properties": {
                        "PCRSelection@Redfish.AllowableValues": {
                            "description": "The supported values for the PCRSelection parameter.",
                            "items": {
                                "enum": [
                                    "PCR0",
                                    "PCR8"
                                ],
                                "type": "string"
                            },
                            "longDescription": "The supported values for the PCRSelection parameter.",
                            "type": "array",
                            "uniqueItems": true
                        },
                        "target": {
                            "description": "Link to invoke action",
                            "type": "string"
                        },
                        "title": {
                            "description": "Friendly action name",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "#ComponentIntegrity.SPDMGetSignedMeasurements": {
                    "properties": {
                        "PCRSelection@Redfish.AllowableValues": {
                            "description": "The supported values for the PCRSelection parameter.",
                            "items": {
                                "enum": [
                                    "PCR0",
                                    "PCR8"
                                ],
                                "type": "string"
                            },
                            "longDescription": "The supported values for the PCRSelection parameter.",
                            "type": "array",
                            "uniqueItems": true
                        },
                        "target": {
                            "description": "Link to invoke action",
                            "type": "string"
                        },
                        "title": {
                            "description": "Friendly action name",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "ComponentIntegrityEnabled": {
            "description": "An indication of whether security protocols are enabled for the component.",
            "longDescription": "This property shall indicate whether security protocols are enabled for the component.  If ComponentIntegrityType contains `SPDM`, a value of `false` shall prohibit the SPDM Requester from using SPDM to communicate with the component identified by the TargetComponentURI property.  If ComponentIntegrityType contains `TPM`, a value of `false` shall disable the TPM component identified by the TargetComponentURI property entirely.  If `false`, services shall not provide the TPM and SPDM properties in response payloads for this resource.  If `false`, services shall reject action requests to this resource.  If `true`, services shall allow security protocols with the component identified by the TargetComponentURI property.",
            "readonly": false,
            "type": "boolean"
        },
        "ComponentIntegrityType": {
            "enum": [
                "SPDM",
                "TPM",
                "OEM"
            ],
            "enumDescriptions": {
                "OEM": "OEM-specific.",
                "SPDM": "Security Protocol and Data Model (SPDM) protocol.",
                "TPM": "Trusted Platform Module (TPM)."
            },
            "enumLongDescriptions": {
                "OEM": "This value shall indicate the integrity information is OEM-specific and the OEM section may include additional information.",
                "SPDM": "This value shall indicate the integrity information is obtained through the Security Protocol and Data Model (SPDM) protocol as defined in DMTF DSP0274.",
                "TPM": "This value shall indicate the integrity information is related to a Trusted Platform Module (TPM) as defined by the Trusted Computing Group (TCG)."
            },
            "type": "string"
        },
        "ComponentIntegrityTypeVersion": {
            "description": "The version of the security technology.",
            "longDescription": "This value of this property shall contain the version of the security technology indicated by the ComponentIntegrityType property.  If ComponentIntegrityType contains `SPDM`, this property shall contain the negotiated or selected SPDM protocol.  If ComponentIntegrityType contains `TPM`, this property shall contain the version of the TPM.",
            "readonly": true,
            "type": "string"
        },
        "Id": {
            "$ref": "Resource.json#/definitions/Id"
        },
        "Name": {
            "$ref": "Resource.json#/definitions/Name"
        },
        "SPDM": {
            "description": "Integrity information about the SPDM Responder as reported by an SPDM Requester.",
            "longDescription": "This property shall contain integrity information about the SPDM Responder identified by the TargetComponentURI property as reported by an SPDM Requester.  This property shall be present if ComponentIntegrityType contains `SPDM` and `ComponentIntegrityEnabled` contains `true`.  For other cases, this property shall be absent.",
            "additionalProperties": false,
            "properties": {
                "IdentityAuthentication": {
                    "description": "Identity authentication information about the SPDM Requester and SPDM Responder.",
                    "longDescription": "This property shall contain identity authentication information about the SPDM Requester and SPDM Responder.",
                    "additionalProperties": false,
                    "properties": {
                        "ResponderAuthentication": {
                            "description": "Authentication information of the identity of the SPDM Responder.",
                            "longDescription": "This property shall contain authentication information of the identity of the SPDM Responder.",
                            "additionalProperties": false,
                            "properties": {
                                "VerificationStatus": {
                                    "description": "The status of the verification of the identity of the component.",
                                    "longDescription": "This property shall contain the status of the verification of the identity of the component referenced by the TargetComponentURI property..",
                                    "enum": [
                                        "Success",
                                        "Failed"
                                    ],
                                    "enumDescriptions": {
                                        "Failed": "Unsuccessful verification.",
                                        "Success": "Successful verification."
                                    },
                                    "readonly": true,
                                    "type": [
                                        "string",
                                        "null"
                                    ]
                                }
                            },
                            "type": [
                                "object",
                                "null"
                            ]
                        }
                    },
                    "type": [
                        "object",
                        "null"
                    ]
                },
                "MeasurementSet": {
                    "description": "Measurement information from the SPDM.",
                    "longDescription": "This property shall contain measurement information from the SPDM.",
                    "properties": {
                        "Measurements": {
                            "description": "Measurements from a SPDM.",
                            "items": {
                                "properties": {
                                    "LastUpdated": {
                                        "description": "The date and time when information for the measurement was last updated.",
                                        "format": "date-time",
                                        "longDescription": "This property shall contain the date and time when information for the measurement was last updated.",
                                        "readonly": true,
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "Measurement": {
                                        "description": "The measurement data.",
                                        "longDescription": "This property shall contain the Base64-encoded measurement using the hash algorithm indicated by the MeasurementHashAlgorithm property.  This property shall not contain a raw bit stream as a measurement.  If the SPDM Responder provides a raw bit stream, the SPDM Requester may apply a hash algorithm to the raw bit stream in order to report the measurement.",
                                        "pattern": "^[A-Za-z0-9+/]+={0,2}$",
                                        "readonly": true,
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "MeasurementHashAlgorithm": {
                                        "description": "The hash algorithm used to compute the measurement.",
                                        "longDescription": "This property shall contain the hash algorithm used to compute the measurement.  The allowable values for this property shall be the hash algorithm names found in the 'BaseHashAlgo' field of the 'NEGOTIATE_ALGORITHMS' request message in DSP0274.  If the algorithm is an extended algorithm, this property shall contain the value `OEM`.  This property shall not be present if MeasurementSpecification does not contain `DMTF`.",
                                        "readonly": true,
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "MeasurementIndex": {
                                        "description": "The index of the measurement.",
                                        "longDescription": "This property shall contain the index of the measurement.",
                                        "readonly": true,
                                        "type": [
                                            "integer",
                                            "null"
                                        ]
                                    },
                                    "SecurityVersionNumber": {
                                        "description": "The security version number the measurement represents.",
                                        "longDescription": "This property shall contain an 8-byte hex-encoded string of the security version number the measurement represents.  This property shall only be present if MeasurementType contains the value `MutableFirmwareSecurityVersionNumber`.",
                                        "pattern": "^[A-Za-z0-9]{16}$",
                                        "readonly": true,
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "versionAdded": "v1_1_0"
                                    },
                                    "MeasurementType": {
                                        "enum": [
                                            "ImmutableROM",
                                            "MutableFirmware",
                                            "HardwareConfiguration",
                                            "FirmwareConfiguration",
                                            "MutableFirmwareVersion",
                                            "MutableFirmwareSecurityVersionNumber",
                                            "MeasurementManifest"
                                        ],
                                        "enumDescriptions": {
                                            "FirmwareConfiguration": "Firmware configuration, such as configurable firmware policy.",
                                            "HardwareConfiguration": "Hardware configuration, such as straps.",
                                            "ImmutableROM": "Immutable ROM.",
                                            "MeasurementManifest": "Measurement Manifest.",
                                            "MutableFirmware": "Mutable firmware or any mutable code.",
                                            "MutableFirmwareSecurityVersionNumber": "Mutable firmware security version number.",
                                            "MutableFirmwareVersion": "Mutable firmware version."
                                        },
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                },
                                "type": [
                                    "object",
                                    "null"
                                ],
                                "readonly": false
                            },
                            "type": "array",
                            "readonly": false
                        },
                        "MeasurementSpecification": {
                            "enum": [
                                "DMTF"
                            ],
                            "enumDescriptions": {
                                "DMTF": "DMTF."
                            },
                            "enumLongDescriptions": {
                                "DMTF": "This value shall indicate the measurement specification is defined by DMTF in DSP0274."
                            },
                            "type": "string"
                        }
                    },
                    "type": [
                        "object",
                        "null"
                    ],
                    "readonly": false
                },
                "Requester": {
                    "description": "The link to the the component that is reporting the integrity information of the target component.",
                    "longDescription": "This property shall contain a link to the resource representing the SPDM Responder that is reporting the integrity of the SPDM Responder identified by the TargetComponentURI property.",
                    "properties": {
                        "@odata.id": {
                            "$ref": "Resource.json#/definitions/odataid"
                        }
                    },
                    "type": [
                        "object",
                        "null"
                    ],
                    "readonly": true
                }
            },
            "type": "object"
        },
        "Status": {
            "$ref": "Resource.json#/definitions/Status"
        },
        "TargetComponentURI": {
            "description": "The link to the the component whose integrity that this resource reports.",
            "longDescription": "This value of this property shall contain a link to the resource whose integrity information is reported in this resource.  If ComponentIntegrityType contains `SPDM`, this property shall contain a URI to the resource that represents the SPDM Responder.  If ComponentIntegrityType contains `TPM`, this property shall contain a URI with RFC6901-defined JSON fragment notation to a member of the TrustedModules array in a ComputerSystem resource that represents the TPM.",
            "readonly": true,
            "type": "string"
        },
        "TPM": {
            "description": "Integrity information about the Trusted Platform Module (TPM).",
            "longDescription": "This property shall contain integrity information about the Trusted Platform Module (TPM) identified by the TargetComponentURI property,  This property shall be present if ComponentIntegrityType contains `TPM` and `ComponentIntegrityEnabled` contains `true`.  For other cases, this property shall be absent.",
            "additionalProperties": false,
            "properties": {
                "MeasurementSet": {
                    "description": "Measurement information from the TPM.",
                    "longDescription": "This property shall contain measurement information from the TPM.",
                    "properties": {
                        "Measurements": {
                            "description": "Measurements from a TPM.",
                            "items": {
                                "properties": {
                                    "PCR": {
                                        "description": "The Platform Configuration Register (PCR) bank of the measurement.",
                                        "longDescription": "This property shall contain the Platform Configuration Register (PCR) bank of the measurement.",
                                        "readonly": true,
                                        "type": [
                                            "integer",
                                            "null"
                                        ]
                                    },
                                    "Measurement": {
                                        "description": "The measurement data.",
                                        "longDescription": "This property shall contain the Base64-encoded PCR digest using the hashing algorithm indicated by MeasurementHashAlgorithm property.",
                                        "pattern": "^[A-Za-z0-9+/]+={0,2}$",
                                        "readonly": true,
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "LastUpdated": {
                                        "description": "The date and time when information for the measurement was last updated.",
                                        "format": "date-time",
                                        "longDescription": "This property shall contain the date and time when information for the measurement was last updated.",
                                        "readonly": true,
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "MeasurementHashAlgorithm": {
                                        "description": "The hash algorithm used to compute the measurement.",
                                        "longDescription": "This property shall contain the hash algorithm used to compute the measurement.  The allowable values for this property shall be the strings in the 'Algorithm Name' field of the 'TPM_ALG_ID Constants' table within the 'Trusted Computing Group Algorithm Registry'.",
                                        "readonly": true,
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                },
                                "type": [
                                    "object",
                                    "null"
                                ],
                                "readonly": false
                            },
                            "type": "array",
                            "readonly": false
                        }
                    },
                    "type": [
                        "object",
                        "null"
                    ],
                    "readonly": false
                },
                "NonceSizeBytesMaximum": {
                    "description": "The maximum number of bytes that can be specified in the Nonce parameter of the TPMGetSignedMeasurements action.",
                    "longDescription": "This property shall contain the maximum number of bytes that can be specified in the Nonce parameter of the TPMGetSignedMeasurements action.",
                    "minimum": 0,
                    "readonly": true,
                    "type": [
                        "integer",
                        "null"
                    ],
                    "versionAdded": "v1_2_0"
                },
                "ComponentCommunication": {
                    "additionalProperties": false,
                    "description": "Information about communication between two components.",
                    "longDescription": "This object shall contain information about communication between two components.",
                    "properties": {
                        "Sessions": {
                            "description": "The active sessions or communication channels between two components.",
                            "items": {
                                "properties": {
                                    "SessionId": {
                                        "description": "The identifier for an active session or communication channel between two components.",
                                        "longDescription": "This property shall contain the unique identifier for the active session or communication channel between two components.",
                                        "readonly": true,
                                        "type": [
                                            "integer",
                                            "null"
                                        ]
                                    },
                                    "SessionType": {
                                        "enum": [
                                            "Plain",
                                            "EncryptedAuthenticated",
                                            "AuthenticatedOnly"
                                        ],
                                        "enumDescriptions": {
                                            "AuthenticatedOnly": "An established session where only authentication is protecting the communication.",
                                            "EncryptedAuthenticated": "An established session where both encryption and authentication are protecting the communication.",
                                            "Plain": "A plain text session without any protection."
                                        },
                                        "type": "string"
                                    }
                                },
                                "type": [
                                    "object",
                                    "null"
                                ],
                                "readonly": false
                            },
                            "longDescription": "This property shall contain an array of the active sessions or communication channels between two components  The active sessions or communication channels do not reflect how future sessions or communication channels are established.",
                            "type": "array"
                        }
                    },
                    "type": "object",
                    "readonly": false
                }
            },
            "type": "object",
            "readonly": false
        },
        "Oem": {
            "description": "Integrity information about the OEM.",
            "longDescription": "This property shall contain integrity information about the OEM identified by the TargetComponentURI property,  This property shall be present if ComponentIntegrityType contains `OEM` and `ComponentIntegrityEnabled` contains `true`.  For other cases, this property shall be absent.",
            "additionalProperties": true,
            "properties": {
                "Hpe": {
                    "$ref": "HpeiLOComponentIntegrity.json#",
                    "readonly": true
                }
            },
            "readonly": true,
            "type": "object"
        }
    },
    "readonly": false,
    "title": "#ComponentIntegrity.v1_2_3.ComponentIntegrity",
    "type": "object"
}